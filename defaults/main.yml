---
# The git repository url.
deploydrupal_repo: ""

# If set to false, git operations will be skipped. Useful if another tool has
# already deployed the latest code.
deploydrupal_code: true

# The branch to be deployed by git.
deploydrupal_version: "master"

# Will discard any local changes present in the git repository.
deploydrupal_git_force: true

# If set to false, composer install operations will be skipped even if
# composer.json is present.
deploydrupal_composer_install: true
# Set to false to install composer dev dependencies.
deploydrupal_composer_no_dev_dependencies: true

# If set to true, drush site-install will be run during deployment.
# This is sometimesuseful during site development.
deploydrupal_site_install: false
# If set to true, drush site-install will use the config directory specified in
# settings.php as the install "profile". This setting is only used when
# deploydrupal_site_install is true.
deploydrupal_site_install_config: true

# If set to false, drush config-import will not be run as part of deployment.
deploydrupal_config_import: true

# The path the repository should be cloned to.
deploydrupal_dir: "/var/www/html"
deploydrupal_core_path: "{{ deploydrupal_dir }}/web"
# The site name used by Drupal to look up settings and files on the file system.
# ex. the "default" in `sites/default/files`.
deploydrupal_site_name: "default"
deploydrupal_files_become: false
deploydrupal_files_path: "{{ deploydrupal_core_path }}/sites/default/files"
deploydrupal_drush_path: "{{ deploydrupal_dir }}/vendor/bin/drush"

deploydrupal_checkout_user: "jenkins"
deploydrupal_apache_user: "www-data"

# Enable to save redis data to disk at the end of deployment.
deploydrupal_redis_flush: false
deploydrupal_redis_host: ""

# Build theme with npm commands.
deploydrupal_npm_theme_build: false
deploydrupal_npm_theme_path: ""
deploydrupal_npm_theme_run_commands: []

# Rebuild Drupal cache.
deploydrupal_drush_cache_rebuild: true
